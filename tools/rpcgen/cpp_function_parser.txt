--- scanner
alpha = ('a'-'z') | ('A'-'Z') | '_' | '$'
num   = '0'-'9'
whitespace = ' ' '\t' 'n' '\r'
comment    = '/*' '*/' '//'

number = ['+'|'-'] num { num }
name   = alpha { alpha|num }
symbol = 'void' | 'bool' | 'char' | 'short' | 'int' | 'long'
       | 'unsigned' | 'signed'
       | 'array' | 'arrayR' 'string' 'stringR'
       | 'static'
delimiter = '(' | ')' | '<' | '>' | '=' | '&' | ',' | ';'

--- parser
inttype  = 'int8_t' | 'int16_t' | 'int32_t' | 'int64_t' 
         | 'uint8_t' | 'uint16_t' | 'uint32_t' | 'uint64_t' |
type         = 'bool' | inttype
complextype  = (('vector'|'vectorR') '<' type '>' '&') | (('string'|'stringR') '&') | (type ['&']) )
parameter    = complextype [ name ['=' [value|'false'|'true'|name]] ]
parlist      = parameter { ',' parameter }
modifier     = ['static']
functiondecl = modifier ('void'|type) name '(' ['void'|parlist] ')' ';'
